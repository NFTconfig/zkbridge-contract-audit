/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMptVerifier,
  IMptVerifierInterface,
} from "../../../contracts/interfaces/IMptVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "validateMPT",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "receiptHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "logs",
            type: "bytes",
          },
        ],
        internalType: "struct IMptVerifier.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMptVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IMptVerifierInterface {
    return new utils.Interface(_abi) as IMptVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMptVerifier {
    return new Contract(address, _abi, signerOrProvider) as IMptVerifier;
  }
}
