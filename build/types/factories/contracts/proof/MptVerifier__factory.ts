/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MptVerifier,
  MptVerifierInterface,
} from "../../../contracts/proof/MptVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proofBlob",
        type: "bytes",
      },
    ],
    name: "validateMPT",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "receiptHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "logs",
            type: "bytes",
          },
        ],
        internalType: "struct MptVerifier.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MptVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MptVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MptVerifier__factory extends ContractFactory {
  constructor(...args: MptVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MptVerifier> {
    return super.deploy(overrides || {}) as Promise<MptVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MptVerifier {
    return super.attach(address) as MptVerifier;
  }
  override connect(signer: Signer): MptVerifier__factory {
    return super.connect(signer) as MptVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MptVerifierInterface {
    return new utils.Interface(_abi) as MptVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MptVerifier {
    return new Contract(address, _abi, signerOrProvider) as MptVerifier;
  }
}
