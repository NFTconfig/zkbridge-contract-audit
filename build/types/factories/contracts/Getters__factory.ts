/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Getters, GettersInterface } from "../../contracts/Getters";

const _abi = [
  {
    inputs: [],
    name: "MIN_LOCK_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "blockUpdater",
    outputs: [
      {
        internalType: "contract IBlockUpdater",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isL2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "l2MessageReceive",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2MessageSend",
    outputs: [
      {
        internalType: "contract IL2MessageSend",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "mptVerifier",
    outputs: [
      {
        internalType: "contract IMptVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "nextSequence",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "zkBridgeContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061037e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806376348f7111610097578063aa4efa5b11610066578063aa4efa5b14610225578063bd51f42e14610248578063d60b347f1461028b578063fe2db7d0146102b757600080fd5b806376348f71146101d85780638da5cb5b146101f65780639a8a0592146102075780639f0a22a61461021d57600080fd5b8063396f7b23116100d3578063396f7b23146101635780633ff032071461017457806366798c2c1461017e5780636b83252a146101ab57600080fd5b80630232c006146100fa5780630d6680871461012457806336ae03d814610136575b600080fd5b600b546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6004545b60405190815260200161011b565b6101076101443660046102db565b61ffff166000908152600c60205260409020546001600160a01b031690565b6002546001600160a01b0316610107565b6101286201518081565b61010761018c3660046102db565b61ffff166000908152600a60205260409020546001600160a01b031690565b6101076101b93660046102db565b61ffff166000908152600960205260409020546001600160a01b031690565b600b54600160a01b900460ff165b604051901515815260200161011b565b6001546001600160a01b0316610107565b60005460405161ffff909116815260200161011b565b600354610128565b6101e6610233366004610306565b60009081526008602052604090205460ff1690565b610272610256366004610306565b60009081526005602052604090205467ffffffffffffffff1690565b60405167ffffffffffffffff909116815260200161011b565b6101e661029936600461031f565b6001600160a01b031660009081526007602052604090205460ff1690565b6101286102c53660046102db565b61ffff1660009081526006602052604090205490565b6000602082840312156102ed57600080fd5b813561ffff811681146102ff57600080fd5b9392505050565b60006020828403121561031857600080fd5b5035919050565b60006020828403121561033157600080fd5b81356001600160a01b03811681146102ff57600080fdfea2646970667358221220a52d722964cf7e7ac9fcdba7aba2698e2d84e0deee121fdbb3cb4cf71db22c2864736f6c634300080e0033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Getters> {
    return super.deploy(overrides || {}) as Promise<Getters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  override connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
